---
name: build-and-verify
on:
  pull_request:
    types:
      - assigned
      - opened
      - synchronize
      - reopened
    branches:
      - main
      - 'v[0-9]*'
  push:
    branches:
      - main
      - 'v[0-9]*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  check-source-code-validity:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - name: "Verify content formatting validity (Markdown lint)"
        uses: DavidAnson/markdownlint-cli2-action@v5
        with:
          globs: |
            README.md
            exampleSite/content/*.md
            exampleSite/content/**/*.md
  build-unminified-site:
    needs: check-source-code-validity
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        hugo: ["0.80.0", "0.88.1", "0.96.0", "latest"]
    steps:
      - name: "Build Site with Hugo and Audit"
        uses: danielfdickinson/build-audit-action-hugo-dfd@v0.2
        with:
          hugo-version: ${{ matrix.hugo }}
          upload-site-as: unminified-site-${{ matrix.hugo }}
          use-lfs: true
          source-directory: exampleSite
  validate-unminified-html:
    needs: build-unminified-site
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        hugo: ["0.80.0", "0.88.1", "0.96.0", "latest"]
    steps:
      - uses: actions/checkout@v3
      - name: "Validate exampleSite HTML"
        uses: danielfdickinson/validate-html-action-hugo-dfd@v0.2
        with:
          download-site-as: unminified-site-${{ matrix.hugo }}
  check-links:
    needs: build-unminified-site
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        hugo: ["0.80.0", "0.88.1", "0.96.0", "latest"]
    steps:
      - uses: actions/checkout@v3
      - name: "Check internal links"
        uses: danielfdickinson/link-check-action-hugo-dfd@v0.2
        with:
          canonical-root: https://example.com/
          download-site-as: unminified-site-${{ matrix.hugo }}
          entry-point: index.html
          upload-logs-as: check-links-failure
          upload-logs-retention: 3
  build-minified-site:
    needs:
      - check-source-code-validity
    runs-on: ubuntu-20.04
    if: ${{ github.event_name == 'push' && github.ref_name == 'main' }}
    steps:
      - name: "Build Site with Hugo and Audit"
        uses: danielfdickinson/build-audit-action-hugo-dfd@v0.2
        with:
          upload-site-as: minified-site
          use-lfs: true
          source-directory: exampleSite
  deploy-minified-site:
    needs:
      - build-minified-site
      - validate-unminified-html
      - check-links
    environment: production
    runs-on: ubuntu-20.04
    if: ${{ github.event_name == 'push' && github.ref_name == 'main' }}
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: minified-site
      - name: "Extract site and configs"
        shell: bash
        env:
          DOWNLOAD_SITE_FILENAME: hugo-site.tar
        run: tar -xf "${DOWNLOAD_SITE_FILENAME}"
      - name: "Install Rclone"
        run: |
          sudo apt-get update
          sudo apt-get install rclone
      - name: "Deploy minified site (rclone sync)"
        shell: bash
        env:
          RCLONE_ONE_FILE_SYSTEM: "true"
          RCLONE_ERROR_ON_NO_TRANSFER: "true"
          RCLONE_SFTP_SKIP_LINKS: "true"
          RCLONE_SFTP_PORT: ${{ secrets.DEPLOY_SFTP_PORT }}
          RCLONE_SFTP_HOST: ${{ secrets.DEPLOY_SFTP_HOSTNAME }}
          RCLONE_SFTP_KEY_PEM: "${{ secrets.DEPLOY_SFTP_PRIVATE_KEY }}"
          REMOTE_PATH: "${{ secrets.DEPLOY_SFTP_REMOTE_PATH }}"
          RCLONE_SFTP_USER: ${{ secrets.DEPLOY_SFTP_USERNAME }}
        run: "rclone sync public/ :sftp:${REMOTE_PATH}"
